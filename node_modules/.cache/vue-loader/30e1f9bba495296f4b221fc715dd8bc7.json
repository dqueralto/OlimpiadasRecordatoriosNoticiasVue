{"remainingRequest":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/src/components/PaquiLimpiadas.vue?vue&type=template&id=006977fa&scoped=true&lang=html&","dependencies":[{"path":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/src/components/PaquiLimpiadas.vue","mtime":1580635016702},{"path":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daw/Documents/DWECcalentito/Ejercicios_JavaScript_DAW/Tema7/Vue/recordatorios/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}